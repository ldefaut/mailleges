<?php

declare(strict_types=1);

namespace App\Entity\User;

use ApiPlatform\Metadata\ApiResource;
use ApiPlatform\Metadata\Get;
use ApiPlatform\Metadata\GetCollection;
use ApiPlatform\Metadata\Post;
use App\Entity\Grade;
use App\State\UserPasswordHasher;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Doctrine\ORM\Mapping\Column;
use Doctrine\ORM\Mapping\Entity;
use Doctrine\ORM\Mapping\OneToMany;

#[ApiResource(
    operations: [
        new Get(),
        new Post(
            processor: UserPasswordHasher::class
        ),
        new GetCollection(),
    ],
    security: "is_granted('ROLE_ADMIN')"
)]
#[Entity]
class Student extends User
{
    #[OneToMany(mappedBy: 'student', targetEntity: Grade::class)]
    private Collection $grades;

    #[Column(length: 255, nullable: true)]
    private ?string $studentId = null;

    #[Column(length: 255, nullable: true)]
    private ?string $cvecId = null;

    #[Column(length: 255, nullable: true)]
    private ?string $ineId = null;

    public function __construct()
    {
        parent::__construct();
        $this->grades = new ArrayCollection();
    }

    public function getRoles(): array
    {
        $roles = parent::getRoles(); // TODO: Change the autogenerated stub
        $roles[] = 'ROLE_STUDENT';

        return array_unique($roles);
    }

    /**
     * @return Collection<int, Grade>
     */
    public function getGrades(): Collection
    {
        return $this->grades;
    }

    public function addGrade(Grade $grade): self
    {
        if (!$this->grades->contains($grade)) {
            $this->grades->add($grade);
            $grade->setStudent($this);
        }

        return $this;
    }

    public function removeGrade(Grade $grade): self
    {
        if ($this->grades->removeElement($grade)) {
            // set the owning side to null (unless already changed)
            if ($grade->getStudent() === $this) {
                $grade->setStudent(null);
            }
        }

        return $this;
    }

    public function getStudentId(): ?string
    {
        return $this->studentId;
    }

    public function setStudentId(?string $studentId): self
    {
        $this->studentId = $studentId;

        return $this;
    }

    public function getCvecId(): ?string
    {
        return $this->cvecId;
    }

    public function setCvecId(?string $cvecId): self
    {
        $this->cvecId = $cvecId;

        return $this;
    }

    public function getIneId(): ?string
    {
        return $this->ineId;
    }

    public function setIneId(?string $ineId): self
    {
        $this->ineId = $ineId;

        return $this;
    }
}
